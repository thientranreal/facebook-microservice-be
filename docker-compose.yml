services:  
  contactdb:
    container_name: contact-db
    image: mysql
    volumes:
      - contactdb-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    ports:
      - "5001:3306"
    networks:
      - backend
  
  contactwebapi:
    container_name: contact-api
    image: contactwebapi
    build:
      context: .
      dockerfile: ContactWebApi/Dockerfile
    depends_on:
      - contactdb
    networks:
      - backend
    environment:
      - DB_HOST=contactdb
      - DB_NAME=contact
      - DB_ROOT_PASSWORD=12345
  
  chatservice:
    container_name: chatservice
    image: chatservice
    build:
      context: .
      dockerfile: ChatService/Dockerfile
    ports:
      - "8002:8080"
    networks:
      - backend
  
  notificationdb:
    container_name: notification-db
    image: mysql
    volumes:
      - notificationdb-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    ports:
      - "5002:3306"
    networks:
      - backend

  notificationwebapi:
    container_name: notification-api
    image: notificationwebapi
    build:
      context: .
      dockerfile: NotificationWebApi/Dockerfile
    depends_on:
      - notificationdb
    networks:
      - backend
    environment:
      - DB_HOST=notificationdb
      - DB_NAME=notification
      - DB_ROOT_PASSWORD=12345
  
  userdb:
    container_name: user-db
    image: mysql
    volumes:
      - userdb-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    ports:
      - "5003:3306"
    networks:
      - backend
  
  userwebapi:
    container_name: user-api
    image: userwebapi
    build:
      context: .
      dockerfile: UserWebApi/Dockerfile
    depends_on:
      - userdb
    networks:
      - backend
    environment:
      - DB_HOST=userdb
      - DB_NAME=user
      - DB_ROOT_PASSWORD=12345
  
  postdb:
    container_name: post-db
    image: mysql
    volumes:
      - postdb-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    ports:
      - "5004:3306"
    networks:
      - backend
        
        
  postwebapi:
    container_name: post-api
    image: postwebapi
    build:
      context: .
      dockerfile: PostWebApi/Dockerfile
    depends_on:
      - postdb
    networks:
      - backend
    environment:
      - DB_HOST=postdb
      - DB_NAME=post
      - DB_ROOT_PASSWORD=12345
      
  requestdb:
    container_name: request-db
    image: mysql
    volumes:
      - requestdb-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    ports:
      - "5005:3306"
    networks:
      - backend    
    
  requestwebapi:
    container_name: request-api
    image: requestwebapi
    build:
      context: .
      dockerfile: RequestWebApi/Dockerfile
    depends_on:
      - requestdb
    networks:
      - backend
    environment:
      - DB_HOST=requestdb
      - DB_NAME=request
      - DB_ROOT_PASSWORD=12345
  
  apigateway:
    container_name: api-gateway
    image: apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    depends_on:
      - contactwebapi
      - notificationwebapi
      - userwebapi
      - postwebapi
      - requestwebapi
    ports:
      - "8001:8080"
    networks:
      - backend

networks:
  backend:
    
volumes:
  contactdb-data:
  notificationdb-data:
  userdb-data:
  postdb-data:
  requestdb-data:

